#include <iostream>
#include <string>
#include <cmath>

Complex operator+(const Complex &a, const Complex &b)
{
	Complex c(a);
	c += b;
	return c;
}

Complex operator-(const Complex &a, const Complex &b)
{
	Complex c(a);
	c = a - b;
	return c;
}

Complex operator*(const Complex &a, const Complex &b)
{
	Complex c(a);
	c = a*b;
	return c;
}

Complex operator/(const Complex &a, const Complex &b)
{
	Complex c(a);
	c = a / b;
	return c;
}

class Complex
{
	double _r, _i;
public:
	Complex(double a = 0, double b = 0)
		:_r(a), _i(b)
	{
		std::cout << "ctor." << std::endl;
	}

	void print()
	{
		std::cout << _r << "+" << _i << "i" << std::endl;
	}

	Complex & operator +=(const Complex &a)
	{
		_r += a._r;
		_r += a._i;
		return *this;
	}

	~Complex()
	{
		std::cout << "dtor." << std::endl;
	}
};
